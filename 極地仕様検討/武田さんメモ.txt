・ガイドライン(案)に記載した数式とプロトタイプとして作成したPythonプログラムはセットになっています。この内容の妥当性の確認として、実装して可視化して動作確認してみることも一案かと思っています。

・これまでの実績からジオロニア(宮内さん)に、試作レベルでも実装に組み込んで頂くのが理想的ではありますが、開発作業の依頼(有償での委託開発)が難しい場合は、DADC内部(青島さん？)の取り組みとして対応可能でしょうか。

・[Pythonプログラムの簡単な解説]
　　[入力データ]海岸線データ(緯度経度座標の点列データ)
　　　https://www.naturalearthdata.com/downloads/10m-physical-vectors/10m-coastline/

[Pythonプログラムの内容](plot_coastline6.py)
　(1)海岸線の緯度経度座標データの読み込みと２次元平面プロット[度単位]
　(2)Webメルカトル…(1)を入力として変換して２次元平面プロット[m単位]
　(3)横メルカトル…(1)を入力として変換して２次元平面プロット[m単位]
　(4)ムー変換…(1)を入力として変換して２次元平面プロット[度単位]
　(5)平面展開…(1)を入力として変換して２次元平面プロット[m単位]
[
Pythonプログラムの内容](plot_coastline8.py)
　(1)横メルカトル投影[緯度経度⇒m単位座標]
　(2)ムー変換(Ruby風変換)で新緯度経度[緯度経度で出力]
　(3)ムー変換(Ruby風変換)→Webメルカトル投影[緯度経度⇒m単位座標]
　(4)90度反時計回り回転⇒(±1倍の R·π のオフセット＆差分計算)

[想定している作業内容]
　①[入力データ]海岸線データ(緯度経度)の読み込み
　②Webメルカトルで変換…(緯度経度⇒ｍ単位)
　③ｍ単位座標を空間ID共通ライブラリにて空間ID化（海岸線データの空間IDボクセル列）
　④空間IDボクセル列（Webメルカトル）を可視化
　⑤横メルカトルで変換…(緯度経度⇒ｍ単位)
　⑥ｍ単位座標を空間ID共通ライブラリにて空間ID化（海岸線データの空間IDボクセル列）
　⑦空間IDボクセル列（横メルカトル）を可視化

少なくても、入力データを差し替える(例えば、ジオロニアのフライト軌跡データ)ことで、緯度経度の点情報を空間IDに変換できるようにツール整備を行う。